{
    "name": "BTCTX Dev Container",
    "image": "mcr.microsoft.com/devcontainers/anaconda:3", 
    // Anaconda image with Python 3 (multi-arch, works on x86_64 and arm64)&#8203;:contentReference[oaicite:14]{index=14}
    "features": {
        "ghcr.io/devcontainers/features/node:1": {
            "version": "18"                     // Install Node.js 18.x (for Vite/React)
        }
    },
    "build": {
        // (Optional) If we needed to customize the Dockerfile further, we could reference it here.
        // Not needed in this setup since we use the base image and Features.
    },
    "settings": { 
        // VSCode settings: make the terminal use bash and automatically activate conda env
        "terminal.integrated.defaultProfile.linux": "bash"
    },
    "extensions": [
        "ms-python.python",        // Python extension for VSCode (auto-detects conda env)
        "ms-python.vscode-pylance",
        "ms-azuretools.vscode-docker",
        "dbaeumer.vscode-eslint"   // (plus any others like React snippets, etc.)
    ],
    "postCreateCommand": "conda env update -n base -f environment.yml && npm install --prefix frontend",  
    // After the container is built, create/update the base conda env with our deps&#8203;:contentReference[oaicite:15]{index=15}, then install frontend packages.
    // Using 'conda env update -n base' applies environment.yml to the base env (Alternatively, could create a named env and activate it).
    "remoteEnv": {
        // Ensure conda is initialized and our environment is active in all shells.
        "PYTHONUNBUFFERED": "1"    // (Just an example, we could add environment variables if needed globally)
    },
    "forwardPorts": [8000, 5173],  // Forward FastAPI and Vite dev server ports to the host.
    "portsAttributes": {
        "8000": { "label": "FastAPI API" },
        "5173": { "label": "Vite Dev Server" }
    },
    "workspaceMount": "src=${localWorkspaceFolder},dst=/workspaces/BTCTX,type=bind,consistency=cached",
    "workspaceFolder": "/workspaces/BTCTX"
}
